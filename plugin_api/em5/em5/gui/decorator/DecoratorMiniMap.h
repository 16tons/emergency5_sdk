// Copyright (C) 2012-2018 Promotion Software GmbH


//[-------------------------------------------------------]
//[ Header guard                                          ]
//[-------------------------------------------------------]
#pragma once


//[-------------------------------------------------------]
//[ Includes                                              ]
//[-------------------------------------------------------]
#include <Rocket/Core/Decorator.h>


//[-------------------------------------------------------]
//[ Namespace                                             ]
//[-------------------------------------------------------]
namespace em5
{


	//[-------------------------------------------------------]
	//[ Classes                                               ]
	//[-------------------------------------------------------]
	/**
	*  @brief
	*    EMERGENCY 5 mini-map decorator
	*
	*  @note
	*    - This class is constructed after the RocketInvaders Starfield Decorators example.
	*    - The source files are located at: https://github.com/lloydw/librocket -> "Sammples/invaders/src/DecoratorStarfield.h"
	*    - The librocket documentation for decorators is located at: http://librocket.com/wiki/documentation/C%2B%2BManual/Decorators
	*/
	class DecoratorMiniMap : public Rocket::Core::Decorator
	{


	//[-------------------------------------------------------]
	//[ Public methods                                        ]
	//[-------------------------------------------------------]
	public:
		/**
		*  @brief
		*    Default constructor
		*/
		inline DecoratorMiniMap();

		/**
		*  @brief
		*    Destructor
		*/
		virtual ~DecoratorMiniMap();

		/**
		*  @brief
		*    Called on a decorator to generate any required per-element data for a newly decorated element
		*
		*  @param[in] element
		*    The newly decorated element
		*
		*  @return
		*    A handle to a decorator-defined data handle, or null pointer if none is needed for the element
		*/
		virtual Rocket::Core::DecoratorDataHandle GenerateElementData(Rocket::Core::Element* element) override;

		/**
		*  @brief
		*    Called to release element data generated by this decorator
		*
		*  @param[in] element_data
		*    The element data handle to release
		*/
		virtual void ReleaseElementData(Rocket::Core::DecoratorDataHandle element_data) override;

		/**
		*  @brief
		*    Called to render the decorator on an element
		*
		*  @param[in] element
		*    The element to render the decorator on
		*  @param[in] element_data
		*    The handle to the data generated by the decorator for the element
		*/
		virtual void RenderElement(Rocket::Core::Element* element, Rocket::Core::DecoratorDataHandle element_data) override;


	};


//[-------------------------------------------------------]
//[ Namespace                                             ]
//[-------------------------------------------------------]
} // em5


//[-------------------------------------------------------]
//[ Implementation                                        ]
//[-------------------------------------------------------]
#include "em5/gui/decorator/DecoratorMiniMap-inl.h"
